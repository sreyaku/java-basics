public class WaitandNotifyPractice {

	public static void main(String[] args) throws InterruptedException {
		Task task=new Task();
		task.start();
		synchronized(task) {
			System.out.println("Trying to call wait method");
			task.wait(1000);
      		System.out.println("Notified");
		}

	}
 static class Task extends Thread{
	 @Override
	 public void run() {
		 synchronized(this) {
		 for(int i=0;i<=10;i++)
		 {
			 System.out.println(i);
		 }
	 System.out.println("Child thread execution completed");
	 this.notifyAll();
 }
		 
 }

//public static void main(String[] args) throws InterruptedException {
//		Task task=new Task();
//	task.start();
//	synchronized(task) {
//		System.out.println("Trying to call wait method");
//		task.wait(1000);
//		System.out.println("Notified");
//	}
 }
 }

