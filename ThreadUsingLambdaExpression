public class ThreadUsingLambdaExprssn {
	public static void main(String[] args) throws Exception {
		Thread t1 = new Thread(() -> {
			for (int i = 0; i <= 5; i++) {
				System.out.println("haiiii");
				try {
					Thread.sleep(1000);
				} catch (Exception e) {
				}
			}
		});
		Thread t2 = new Thread(() -> {
			for (int i = 0; i <= 5; i++) {
				System.out.println("heloo");
				try {
					Thread.sleep(1000);
				} catch (Exception e) {
				}
			}
		});
		t1.start();
		try {
			t1.sleep(1000);
		} catch (Exception e) {
		}

		t2.start();
		System.out.println(t1.isAlive());//returns true 
		System.out.println(t2.isAlive());
		t1.join();
		t2.join();
		System.out.println(t1.isAlive());//returns false as it is after the join
		System.out.println(t2.isAlive());
		System.out.println("Completed");

	}
}
